// Copyright 1998-2014 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Gladiator.h"
#include "Gladiator.generated.dep.h"
void EmptyLinkFunctionForGeneratedCodeGladiator() {}
	void AGladiatorGameMode::StaticRegisterNativesAGladiatorGameMode()
	{
	}
	IMPLEMENT_CLASS(AGladiatorGameMode, 805502311);
	void AMyAIController::StaticRegisterNativesAMyAIController()
	{
	}
	IMPLEMENT_CLASS(AMyAIController, 296742133);
	void AMyGladiatorCharacter::StaticRegisterNativesAMyGladiatorCharacter()
	{
	}
	IMPLEMENT_CLASS(AMyGladiatorCharacter, 1052333625);
	void AMyAICharacter::StaticRegisterNativesAMyAICharacter()
	{
	}
	IMPLEMENT_CLASS(AMyAICharacter, 4090637929);
	void AMyAIDirector::StaticRegisterNativesAMyAIDirector()
	{
	}
	IMPLEMENT_CLASS(AMyAIDirector, 1252518969);
	void AMyAIHUD::StaticRegisterNativesAMyAIHUD()
	{
	}
	IMPLEMENT_CLASS(AMyAIHUD, 1074197764);
	void UMyAttackNode::StaticRegisterNativesUMyAttackNode()
	{
	}
	IMPLEMENT_CLASS(UMyAttackNode, 3103274134);
	void UMyCharacterAnimInstance::StaticRegisterNativesUMyCharacterAnimInstance()
	{
	}
	IMPLEMENT_CLASS(UMyCharacterAnimInstance, 1673659157);
	void AMyGladiatorGameMode::StaticRegisterNativesAMyGladiatorGameMode()
	{
	}
	IMPLEMENT_CLASS(AMyGladiatorGameMode, 3548472020);
	void AMyGladiatorPawn::StaticRegisterNativesAMyGladiatorPawn()
	{
	}
	IMPLEMENT_CLASS(AMyGladiatorPawn, 2623051461);
	void AMyHammerActor::StaticRegisterNativesAMyHammerActor()
	{
	}
	IMPLEMENT_CLASS(AMyHammerActor, 3444167139);
	void AMyShieldActor::StaticRegisterNativesAMyShieldActor()
	{
	}
	IMPLEMENT_CLASS(AMyShieldActor, 553612231);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	AIMODULE_API class UClass* Z_Construct_UClass_AAIController();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_APawn_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AHUD();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture2D_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTaskNode();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimInstance();
	ENGINE_API class UClass* Z_Construct_UClass_APawn();

	GLADIATOR_API class UClass* Z_Construct_UClass_AGladiatorGameMode_NoRegister();
	GLADIATOR_API class UClass* Z_Construct_UClass_AGladiatorGameMode();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyAIController_NoRegister();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyAIController();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyGladiatorCharacter_NoRegister();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyGladiatorCharacter();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyAICharacter_NoRegister();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyAICharacter();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyAIDirector_NoRegister();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyAIDirector();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyAIHUD_NoRegister();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyAIHUD();
	GLADIATOR_API class UClass* Z_Construct_UClass_UMyAttackNode_NoRegister();
	GLADIATOR_API class UClass* Z_Construct_UClass_UMyAttackNode();
	GLADIATOR_API class UClass* Z_Construct_UClass_UMyCharacterAnimInstance_NoRegister();
	GLADIATOR_API class UClass* Z_Construct_UClass_UMyCharacterAnimInstance();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyGladiatorGameMode_NoRegister();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyGladiatorGameMode();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyGladiatorPawn_NoRegister();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyGladiatorPawn();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyHammerActor_NoRegister();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyHammerActor();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyShieldActor_NoRegister();
	GLADIATOR_API class UClass* Z_Construct_UClass_AMyShieldActor();
	GLADIATOR_API class UPackage* Z_Construct_UPackage_Gladiator();
	UClass* Z_Construct_UClass_AGladiatorGameMode_NoRegister()
	{
		return AGladiatorGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_AGladiatorGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage_Gladiator();
			OuterClass = AGladiatorGameMode::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x009002A4;


			UProperty* NewProp_HeroPV = new(OuterClass, TEXT("HeroPV"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(HeroPV, AGladiatorGameMode), 0x0000000000000005);
			OuterClass->ClassConfigName = FName(TEXT("Game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation Info MovementReplication Replication Actor"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GladiatorGameMode.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("GladiatorGameMode.h"));
			MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
			MetaData->SetValue(NewProp_HeroPV, TEXT("Category"), TEXT("Attack"));
			MetaData->SetValue(NewProp_HeroPV, TEXT("ModuleRelativePath"), TEXT("GladiatorGameMode.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AGladiatorGameMode(Z_Construct_UClass_AGladiatorGameMode, TEXT("AGladiatorGameMode"));
	UClass* Z_Construct_UClass_AMyAIController_NoRegister()
	{
		return AMyAIController::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyAIController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AAIController();
			Z_Construct_UPackage_Gladiator();
			OuterClass = AMyAIController::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900280;


			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyAIController.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyAIController.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyAIController(Z_Construct_UClass_AMyAIController, TEXT("AMyAIController"));
	UClass* Z_Construct_UClass_AMyGladiatorCharacter_NoRegister()
	{
		return AMyGladiatorCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyGladiatorCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage_Gladiator();
			OuterClass = AMyGladiatorCharacter::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900080;


			UProperty* NewProp_PV = new(OuterClass, TEXT("PV"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PV, AMyGladiatorCharacter), 0x0000000000000005);
			UProperty* NewProp_MaxPV = new(OuterClass, TEXT("MaxPV"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MaxPV, AMyGladiatorCharacter), 0x0000000000000005);
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation AI|Navigation Pawn|Character|InternalEvents"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Characters/MyGladiatorCharacter.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Characters/MyGladiatorCharacter.h"));
			MetaData->SetValue(NewProp_PV, TEXT("Category"), TEXT("Director"));
			MetaData->SetValue(NewProp_PV, TEXT("ModuleRelativePath"), TEXT("Characters/MyGladiatorCharacter.h"));
			MetaData->SetValue(NewProp_MaxPV, TEXT("Category"), TEXT("Director"));
			MetaData->SetValue(NewProp_MaxPV, TEXT("ModuleRelativePath"), TEXT("Characters/MyGladiatorCharacter.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyGladiatorCharacter(Z_Construct_UClass_AMyGladiatorCharacter, TEXT("AMyGladiatorCharacter"));
	UClass* Z_Construct_UClass_AMyAICharacter_NoRegister()
	{
		return AMyAICharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyAICharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AMyGladiatorCharacter();
			Z_Construct_UPackage_Gladiator();
			OuterClass = AMyAICharacter::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900080;


			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation AI|Navigation Pawn|Character|InternalEvents"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyAICharacter.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyAICharacter.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyAICharacter(Z_Construct_UClass_AMyAICharacter, TEXT("AMyAICharacter"));
	UClass* Z_Construct_UClass_AMyAIDirector_NoRegister()
	{
		return AMyAIDirector::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyAIDirector()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_Gladiator();
			OuterClass = AMyAIDirector::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900080;


			UProperty* NewProp_EnemyPV = new(OuterClass, TEXT("EnemyPV"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(EnemyPV, AMyAIDirector), 0x0000000000000005);
			UProperty* NewProp_DeltaAttack = new(OuterClass, TEXT("DeltaAttack"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DeltaAttack, AMyAIDirector), 0x0000000000000005);
			UProperty* NewProp_SpawnedAIArray = new(OuterClass, TEXT("SpawnedAIArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SpawnedAIArray, AMyAIDirector), 0x0000000000020015);
			UProperty* NewProp_SpawnedAIArray_Inner = new(NewProp_SpawnedAIArray, TEXT("SpawnedAIArray"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FPostConstructInitializeProperties(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UClass_APawn_NoRegister());
			UProperty* NewProp_SpawnPointArray = new(OuterClass, TEXT("SpawnPointArray"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SpawnPointArray, AMyAIDirector), 0x0000000000000005);
			UProperty* NewProp_SpawnPointArray_Inner = new(NewProp_SpawnPointArray, TEXT("SpawnPointArray"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FPostConstructInitializeProperties(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_AIClassToSpawn = new(OuterClass, TEXT("AIClassToSpawn"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(AIClassToSpawn, AMyAIDirector), 0x0000000000000005, Z_Construct_UClass_UObject_NoRegister());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyAIDirector.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyAIDirector.h"));
			MetaData->SetValue(NewProp_EnemyPV, TEXT("Category"), TEXT("Director"));
			MetaData->SetValue(NewProp_EnemyPV, TEXT("ModuleRelativePath"), TEXT("MyAIDirector.h"));
			MetaData->SetValue(NewProp_DeltaAttack, TEXT("Category"), TEXT("Director"));
			MetaData->SetValue(NewProp_DeltaAttack, TEXT("ModuleRelativePath"), TEXT("MyAIDirector.h"));
			MetaData->SetValue(NewProp_SpawnedAIArray, TEXT("Category"), TEXT("Director"));
			MetaData->SetValue(NewProp_SpawnedAIArray, TEXT("ModuleRelativePath"), TEXT("MyAIDirector.h"));
			MetaData->SetValue(NewProp_SpawnPointArray, TEXT("Category"), TEXT("Director"));
			MetaData->SetValue(NewProp_SpawnPointArray, TEXT("ModuleRelativePath"), TEXT("MyAIDirector.h"));
			MetaData->SetValue(NewProp_AIClassToSpawn, TEXT("Category"), TEXT("Director"));
			MetaData->SetValue(NewProp_AIClassToSpawn, TEXT("ModuleRelativePath"), TEXT("MyAIDirector.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyAIDirector(Z_Construct_UClass_AMyAIDirector, TEXT("AMyAIDirector"));
	UClass* Z_Construct_UClass_AMyAIHUD_NoRegister()
	{
		return AMyAIHUD::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyAIHUD()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AHUD();
			Z_Construct_UPackage_Gladiator();
			OuterClass = AMyAIHUD::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x0090028C;


			UProperty* NewProp_PlayerTeamHPTexture = new(OuterClass, TEXT("PlayerTeamHPTexture"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(PlayerTeamHPTexture, AMyAIHUD), 0x0000000000000000, Z_Construct_UClass_UTexture2D_NoRegister());
			UProperty* NewProp_BarFillTexture = new(OuterClass, TEXT("BarFillTexture"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BarFillTexture, AMyAIHUD), 0x0000000000000000, Z_Construct_UClass_UTexture2D_NoRegister());
			OuterClass->ClassConfigName = FName(TEXT("Game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Rendering Actor Input Replication"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyAIHUD.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyAIHUD.h"));
			MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
			MetaData->SetValue(NewProp_PlayerTeamHPTexture, TEXT("ModuleRelativePath"), TEXT("MyAIHUD.h"));
			MetaData->SetValue(NewProp_PlayerTeamHPTexture, TEXT("ToolTip"), TEXT("player team health bar texture"));
			MetaData->SetValue(NewProp_BarFillTexture, TEXT("ModuleRelativePath"), TEXT("MyAIHUD.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyAIHUD(Z_Construct_UClass_AMyAIHUD, TEXT("AMyAIHUD"));
	UClass* Z_Construct_UClass_UMyAttackNode_NoRegister()
	{
		return UMyAttackNode::StaticClass();
	}
	UClass* Z_Construct_UClass_UMyAttackNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTaskNode();
			Z_Construct_UPackage_Gladiator();
			OuterClass = UMyAttackNode::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00100080;


			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyAttackNode.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyAttackNode.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMyAttackNode(Z_Construct_UClass_UMyAttackNode, TEXT("UMyAttackNode"));
	UClass* Z_Construct_UClass_UMyCharacterAnimInstance_NoRegister()
	{
		return UMyCharacterAnimInstance::StaticClass();
	}
	UClass* Z_Construct_UClass_UMyCharacterAnimInstance()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UAnimInstance();
			Z_Construct_UPackage_Gladiator();
			OuterClass = UMyCharacterAnimInstance::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900088;


			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Dead, UMyCharacterAnimInstance, bool);
			UProperty* NewProp_Dead = new(OuterClass, TEXT("Dead"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Dead, UMyCharacterAnimInstance), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(Dead, UMyCharacterAnimInstance), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Attacking, UMyCharacterAnimInstance, bool);
			UProperty* NewProp_Attacking = new(OuterClass, TEXT("Attacking"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Attacking, UMyCharacterAnimInstance), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(Attacking, UMyCharacterAnimInstance), sizeof(bool), true);
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("AnimInstance"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyCharacterAnimInstance.h"));
			MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyCharacterAnimInstance.h"));
			MetaData->SetValue(NewProp_Dead, TEXT("Category"), TEXT("Attack"));
			MetaData->SetValue(NewProp_Dead, TEXT("ModuleRelativePath"), TEXT("MyCharacterAnimInstance.h"));
			MetaData->SetValue(NewProp_Attacking, TEXT("Category"), TEXT("Attack"));
			MetaData->SetValue(NewProp_Attacking, TEXT("ModuleRelativePath"), TEXT("MyCharacterAnimInstance.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMyCharacterAnimInstance(Z_Construct_UClass_UMyCharacterAnimInstance, TEXT("UMyCharacterAnimInstance"));
	UClass* Z_Construct_UClass_AMyGladiatorGameMode_NoRegister()
	{
		return AMyGladiatorGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyGladiatorGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage_Gladiator();
			OuterClass = AMyGladiatorGameMode::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x009002A4;


			OuterClass->ClassConfigName = FName(TEXT("Game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation Info MovementReplication Replication Actor"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyGladiatorGameMode.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyGladiatorGameMode.h"));
			MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyGladiatorGameMode(Z_Construct_UClass_AMyGladiatorGameMode, TEXT("AMyGladiatorGameMode"));
	UClass* Z_Construct_UClass_AMyGladiatorPawn_NoRegister()
	{
		return AMyGladiatorPawn::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyGladiatorPawn()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APawn();
			Z_Construct_UPackage_Gladiator();
			OuterClass = AMyGladiatorPawn::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900080;


			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation AI|Navigation"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyGladiatorPawn.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyGladiatorPawn.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyGladiatorPawn(Z_Construct_UClass_AMyGladiatorPawn, TEXT("AMyGladiatorPawn"));
	UClass* Z_Construct_UClass_AMyHammerActor_NoRegister()
	{
		return AMyHammerActor::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyHammerActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_Gladiator();
			OuterClass = AMyHammerActor::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900080;


			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Characters/MyHammerActor.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Characters/MyHammerActor.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyHammerActor(Z_Construct_UClass_AMyHammerActor, TEXT("AMyHammerActor"));
	UClass* Z_Construct_UClass_AMyShieldActor_NoRegister()
	{
		return AMyShieldActor::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyShieldActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_Gladiator();
			OuterClass = AMyShieldActor::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900080;


			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Characters/MyShieldActor.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Characters/MyShieldActor.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyShieldActor(Z_Construct_UClass_AMyShieldActor, TEXT("AMyShieldActor"));
	UPackage* Z_Construct_UPackage_Gladiator()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/Gladiator")), false, false));
			ReturnPackage->PackageFlags |= PKG_CompiledIn | 0x00000000;
			FGuid Guid;
			Guid.A = 0xCE763D10;
			Guid.B = 0x8DDA985B;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);
		}
		return ReturnPackage;
	}
#endif

